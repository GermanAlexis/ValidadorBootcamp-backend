name: Deploy to EC2

on:
  push:
    branches:
      - main # Cambia esto a tu rama deseada

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (optional for caching)
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 
        with:          
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Build Docker image
        run: docker build -t glasscamp-backend:latest .

      - name: Tag Docker image
        run: docker tag glasscamp-backend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/glasscamp-backend:latest

      - name: Push Docker image to Amazon ECR
        run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/glasscamp-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Install SSH client
        run: sudo apt-get install -y sshpass

      - name: SSH and deploy
        env:
          SSHPASS: ${{ secrets.EC2_KEY }}
        run: |
          sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            echo "export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.bashrc
            echo "export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.bashrc
            echo "export AWS_REGION=${{ secrets.AWS_REGION }}" >> ~/.bashrc
            source ~/.bashrc
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/glasscamp-backend:latest
            docker stop glasscamp-backend || true
            docker rm glasscamp-backend || true
            docker run -d \
              --name glasscamp-backend \
              -p 80:3000 \
              -e DATABASE_HOST=${{ secrets.DATABASE_HOST }} \
              -e DATABASE_PORT=${{ secrets.DATABASE_PORT }} \
              -e DATABASE_USER=${{ secrets.DATABASE_USER }} \
              -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
              -e NODE_ENV=${{ secrets.ENVIRONMENT }} \
              -e FILE_SERVICE_URL=${{ secrets.FILE_SERVICE_URL }} \
              -e REVIEW_SERVICE_URL=${{ secrets.REVIEW_SERVICE_URL }} \
              -e BOOTCAMP_SERVICE_URL=${{ secrets.BOOTCAMP_SERVICE_URL }} \
              -e ASSESSEMENT_SERVICE_URL=${{ secrets.ASSESSMENT_SERVICE_URL }} \
              ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/glasscamp-backend:latest
          EOF
